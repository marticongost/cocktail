
@import "cocktail.ui://styles/common";

$animation-duration: 0.5s;
$exposed-node-border-color: $strong-panel-border-color;
$covered-node-border-color: #ddd;
$covered-heading-scale: 0.8;
$exposed-heading-color: #444;
$covered-heading-color: #999;
$exposed-panel-background-color: $panel-background-color;
$covered-panel-background-color: white;
$exposed-panel-border-color: $panel-border-color;
$covered-panel-border-color: white;

@keyframes doNothing {
}

@keyframes fadeNode {
    from { opacity: 1; }
    to { opacity: 0; }
}

@keyframes dimNode {
    from { opacity: 1; }
    to { opacity: 0.6; }
}

@keyframes fadeFrame {
    from { border-color: $exposed-node-border-color; }
    to { border-color: $covered-node-border-color; }
}

@keyframes slideContent {
    from { padding-top: 100%; }
    to { padding-top: 0%; }
}

@keyframes fadeMain {
    from { opacity: 1; }
    to { opacity: 0; }
}

@keyframes diminishHeading {
    from {
        transform: scale(1);
        color: $exposed-heading-color;
        left: 0;
        top: 0;
    }
    to {
        transform: scale($covered-heading-scale);
        color: $covered-heading-color;
    }
}

@keyframes fadePanel {
    from {
        border-color: $exposed-panel-border-color;
        background-color: $exposed-panel-background-color;
    }
    to {
        border-color: $covered-panel-border-color;
        background-color: $covered-panel-background-color;
    }
}

@keyframes fadeHeaderContent {
    from { opacity: 1; }
    to { opacity: 0; }
}

:host {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    position: relative;
}

// Fade
:host([animationState='closed'][animationType='fade']) {
    opacity: 0;
}

:host([animationState='opening'][animationType='fade']) {
    animation: $animation-duration reverse fadeNode;
}

:host([animationState='closing'][animationType='fade']) {
    animation: $animation-duration fadeNode;
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
}

:host([animationState='childOpening'][animationType='fade']) {
    animation: $animation-duration dimNode;
}

:host([animationState='childClosing'][animationType='fade']) {
    animation: $animation-duration reverse dimNode;
}

// Slide
:host([animationState='opening'][animationType='slide']) {
    animation: $animation-duration slideContent;
}

:host([animationState='closing'][animationType='slide']) {
    animation: $animation-duration reverse slideContent;
}

:host([animationState='childOpening'][animationType='slide']) {
    animation: $animation-duration fadeFrame;

    #header {
        animation: $animation-duration fadePanel;
    }

    #headerContent {
        animation: $animation-duration fadeHeaderContent;
    }

    #heading {
        animation: $animation-duration diminishHeading;
    }

    #main {
        animation: $animation-duration fadeMain;
    }
}

:host([animationState='childClosing'][animationType='slide']) {
    animation: $animation-duration reverse fadeFrame;

    #header {
        animation: $animation-duration reverse fadePanel;
    }

    #headerContent {
        animation: $animation-duration reverse fadeHeaderContent;
    }

    #heading {
        animation: $animation-duration reverse diminishHeading;
    }

    #main {
        animation: $animation-duration reverse fadeMain;
    }
}

#stackNodeContent {
    display: flex;
    flex-direction: column;
    flex: 1 1 auto;
    border: 1px solid $exposed-node-border-color;
    border-right: none !important;
    border-bottom: none !important;
    box-shadow: 0 0 25px rgba(30,30,30,0.1);
    background-color: white;

    :host([stackNodeVisibility='covered']) & {
        pointer-events: none;
        border: 1px solid $covered-node-border-color;
    }
}

#header {
    flex: 0 0 auto;
    display: flex;
    flex-direction: row;
    align-items: stretch;
    background: $panel-background;
    border-bottom: $panel-border;
    padding-left: 1em;

    :host([stackNodeVisibility='covered'][animationType='slide']) & {
        border: none;
        background: none;
    }
}

#headingWrapper {
    flex: 0 0 auto;
    padding: 1em 0;
    margin-right: 2em;
}

#heading {
    font-size: 1.3em;
    font-weight: bold;
    color: $exposed-heading-color;
    position: relative;
    transform-origin: top left;

    :host([stackNodeVisibility='covered'][animationType='slide']) & {
        transform: scale($covered-heading-scale);
        color: $covered-heading-color;
    }
}

#headerContent {
    flex: 1 1 auto;
    display: flex;
    flex-direction: row;
    align-items: stretch;

    :host([stackNodeVisibility='covered']:not([animationState='childClosing'])) & {
        display: none;
    }

    .cocktail-ui-ActionList {
        border: none;
    }
}

#main {
    flex: 1 1 auto;
    padding: 1em;
    overflow: hidden;

    :host([animationState='none']) & {
        overflow-y: auto;
    }

    :host([stackNodeVisibility='covered'][animationState='none']) & {
        opacity: 0;
    }
}

#stackDescendants {
    left: 1em;
    right: 0;
    top: 3em;
    bottom: 0;
    position: absolute;
    display: flex;

    &:empty {
        display: none;
    }
}

