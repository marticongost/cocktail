<?xml version="1.0" encoding="utf-8"?>
<?py
from cocktail.controllers import get_state, view_state
?>

<form
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <?py-class
    filters = ()
    available_filters = ()    
    ?>

    <div py:id="filter_list">
        <py:ready>
            <py:new
                py:element="self.create_filter_entry(index, filter)"            
                py:for="index, filter in enumerate(self.filters)"/>
        </py:ready>
    </div>

    <div py:def="filter_entry" py:args="index, filter">
        <span class="filter_desc">${translate(filter)}</span>
        <py:new
            py:element="filter.create_ui()"
            py:name_suffix="${str(index)}">
            <?py
            element.add_class("filter_ui")
            ?>
        </py:new>
        <a>
            <?py
            params = {"page": "0"}
            filter_param = []
            params["filter"] = filter_param
            state = get_state()
            
            for i, f in enumerate(self.filters):

                if i != index:
                    filter_param.append(f.id)

                if i >= index:
                    for member in f.schema.members().itervalues():
                        params["filter_" + member.name + str(i)] = None
                    if i > index:
                        for member in f.schema.members().itervalues():
                            params["filter_" + member.name + str(i)] = \
                                state.get("filter_" + member.name + str(i + 1))
                
            element["href"] = "?" + view_state(**params)
            ?>
            <img src="/resources/images/delete_small.png"/>
        </a>
    </div>

    <div py:id="buttons">

        <div py:id="new_filter_selector" class="selector">
            <span class="label">${translate("cocktail.html.FilterBox add filter")}</span>
            <div class="selector_content">
                <py:ready>
                    <a py:for="filter in self.available_filters"
                        href="?${view_state(filter = [f.id for f in self.filters] + [filter.id])}">
                        ${translate(filter)}
                    </a>
                </py:ready>
            </div>
        </div>

        <a py:id="clear_button">
            <py:ready>
                <?py                
                params = {"filter": None}
                for i, filter in enumerate(self.filters):
                    for member in filter.schema.members().itervalues():
                        params["filter_" + member.name + str(i)] = None

                element["href"] = "?" + view_state(**params)
                ?>
            </py:ready>
            ${translate("cocktail.html.FilterBox clear filters")}
        </a>

        <button type="submit">
            ${translate("cocktail.html.FilterBox apply filters")}
        </button>
    </div>

</form>
